package com.moviesAPI.moviesAPI.controllers;


import com.moviesAPI.moviesAPI.entities.Genre;
import com.moviesAPI.moviesAPI.entities.Movie;
import com.moviesAPI.moviesAPI.repositories.GenreRepository;
import com.moviesAPI.moviesAPI.repositories.MovieRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Controller // This means that this class is a Controller
@Validated
@RequestMapping(path="/genres") // This means URL's start with /genres (after Application path)
public class GenreController {
    @Autowired // This means to get the bean called genreRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private GenreRepository genreRepository;
    @Autowired
    private MovieRepository movieRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewGenre (@RequestParam String name, @RequestParam List<Long> moviesIds /*,
                                                 @RequestParam MultipartFile multipartImage*/) throws IOException {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Genre genre = new Genre();
        genre.setName(name);
        //genre.setImage(multipartImage.getBytes());

        //only previously added movies will be added to genre
        for(Long movieId : moviesIds){
            Optional<Movie> movies = movieRepository.findById(movieId);
            if (movies.isPresent()) {
                Movie movie = movies.get();
                genre.getMovies().add(movie);
                movie.getGenres().add(genre);
            }
        }

        genreRepository.save(genre);
        return name + " Saved!";
    }
}
